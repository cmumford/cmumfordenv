# Format of this file:
#
# include:configfile
#             Also pars 'configfile'.
#
# defaultcscheme:<name of colorscheme>
#             Selects the default color scheme to use. If this one is set, you
#             no longer need -cS/-CS.
#
# colorscheme:<name of colorscheme>
#             This name can be given for the commandline-parameter -cS. That
#             way, one can select what colorscheme to use for the next
#             logfile.
#
# cs_re:<color>:<regular expression>
#             This defines a regular expression to find a particular string.
#
#             color: [fg],[bg],[attribute[/otherattribute]][|other colorpair+attribute]
#             e.g.: red,,bold|red would give bold red for line 1 and just red for line 2, etc.
# Possible colors: red, green, yellow, blue, magenta, cyan and white.
#
#
# cs_re_s:<color>:<regular expression>
#             Like cs_re but only the substrings are used(!). E.g.:
#             ^....(...)...(...)
#             In the example above only what matches between '(' and ')' is
#             assigned a color. See the 'acctail' colorscheme for an example.
#
# cs_re_val_less:<color>:<value>:<regular expression>
# cs_re_val_bigger:<color>:<value>:<regular expression>
# cs_re_val_equal:<color>:<value>:<regular expression>
#             Like cs_re_s(!) but here the value of the sub(!)-string is
#             compared against the given value. e.g.:
#             cs_re_val_less: if "<value>" less then the value matched with
#             the regular expression, then use the selected color. Please
#             note that you have to select the value in the string with a
#             substring match; put '(' and ')' around it.
#
# mcsre:color:regexp
# mcsre_s:color:regexp
# mcsre_val_less/bigger/equal:color:regexp
#             These work like their cs_re* sisters only they merge their
#             attributes (colors, bold, bright, etd) with the previous
#             merging one.
#
# scheme:<name of colorscheme>:<regular expression>
#             This defines what colorscheme to use when the filename matches
#             the given regular expression. This way, one can automatically
#             use the correct colorscheme for certain files.
#
# check_mail:<seconds>
#             How often MultiTail should check for new e-mail. You can switch
#             mail-checking off by setting this value to 0.
#
# tab_stop:<number of spaces>
#             Specifies the width of TAB characters. Default-value is 4.
#
# bind:key:program
#             Binds a key to a external command. For example:
#             bind:^j:/bin/bash   - binds ^j (control + j) to bash. While the
#             selected program is running, MultiTail is suspended. MultiTail
#             will automatically come back when the external command ends.
#
# titlebar:
#             what to put in the titlebar of the xterm in which MultiTail is
#             running. see below for details
#
# tail:tail_program
#             path to the tail-program (in case you want to use turbotail or
#             so instead of the regular tail)
#
# bright:(1|0)
#             use bright colors (1) or not (0)
#
# abbreviate_filesize
#             wether to abbreviate filesizes to xKB/MB/GB (1) or not (0)
#
# show_subwindow_id
#             when set to 1 and merging multiple inputs (e.g. logfiles) the
#             output show is prepended with a number indicating the input
#
# markerline_color
#             with this one you can set how a markerline looks. e.g. yellow on
#             red or so
#
# markerline_timestamp
#             sets wether to put a timestamp in the markerline (1) or not (0)
#
# ts_format:<format>
#             format of timestamps. see the man-page of 'strftime' for a list
#             of the fields that can be used
#
# shell:<path>
#             shell to use when invoking programs. default is /bin/sh
#
# umask:<mask>
#             umask used when creating files
#
#defaultcscheme:syslog
#
# /var/log/messages & .../syslog
colorscheme:syslog:kernel and unsorted messages
# segfaults
cs_re_s:red,,bold:kernel: ([^:]*): segfault at [^ ]* rip [^ ]* rsp [^ ]* error
cs_re:yellow:kernel: .*: segfault at [^ ]* rip [^ ]* rsp [^ ]* error
# misc
cs_re:red,,inverse/underline:kernel
cs_re:green:Detected.*$
cs_re:green:\[
cs_re:green:\]
cs_re:cyan::
cs_re:blue|blue,,bold:^... .. ..:..:..
cs_re_s:,,bold:^... .. ..:..:.. [^ ]* ([A-z0-9]*)
cs_re:red:scanlogd.*
cs_re:yellow:Did.not
