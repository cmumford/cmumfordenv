#!/usr/bin/ruby

require 'date'
require 'rexml/document'

include REXML

class Revision
	attr_accessor :rev, :author, :date, :msg
end

if ARGV.length != 2 then
	STDERR.puts "usage: svngrep <URL/dir> <text>"
	exit 1
end

url = ARGV[0]
text = ARGV[1]

def getRevisions(suburl)
	submissions = Array.new
	cmd = "svn log -v --xml #{suburl}"
	svn_output = `#{cmd}`
	doc = Document.new(svn_output)
	doc.elements.each("log/logentry") { |entry| 

		pathElem = entry.elements["paths/path"]
		r = Revision.new
		path = pathElem.text
		r.rev = Integer(entry.attributes["revision"])
		r.author = entry.elements["author"].text
		r.date = DateTime.parse(entry.elements["date"].text)
		r.msg = entry.elements["msg"].text

		submissions.push(r)
	}
	return submissions
end

def getUrl(dir)
	doc = Document.new(`svn info --xml #{dir}`)
	return doc.root.elements["entry/url"].text
end

if not url =~ /^http:\/\// then
    url = getUrl(".") + "/" + url
end

puts "Getting revision history..."
revisions = getRevisions(url)
revisions.sort! { |x,y| y.rev <=> x.rev }
revisions.each {|revision|
	puts "Revision #{revision.rev}, author: #{revision.author}, date: #{revision.date}"
    # Because diff prints out lines before/after the change we look for ^[-+]...
	cmd = "svn diff -c #{revision.rev} #{url} | grep \"^[-\\+].*#{text}\""
#	puts "#{cmd}"
	puts `#{cmd}`
}
