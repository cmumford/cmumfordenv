#!/usr/bin/python

# svnhist - a simple program for displaying file(s) and their svn history.

import os
import dircache
import datetime
import time
import wx # Import basic wxPython modules.

import svn.wc
import svn.core
import xml.dom.minidom
import subprocess

class SvnLogEntry(object):
	def __init__(self, revision):
		self.revision = revision
		self.date = None
		self.msg = None
	
class Subversion(object):

	@staticmethod
	def GetSvnItemEntry(item):
		#	print "File: %s", item
		dirpath = fullpath = os.path.abspath(item)
		if not os.path.isdir(dirpath):
			dirpath = os.path.dirname(dirpath)
		adm_baton = None
		try:
			adm_baton = svn.wc.adm_open(None, dirpath, 1, 1)
			return svn.wc.entry(fullpath, adm_baton, 0)
		except: pass
		finally:
			if adm_baton != None:
				svn.wc.adm_close(adm_baton)
		return None

	@staticmethod
	def GetSvnItemUrl(item):
		entry = Subversion.GetSvnItemEntry(item)
		return entry.url if entry != None else None
		
	@staticmethod
	def IsUnderSvnControl(item):
		return Subversion.GetSvnItemUrl(item) != None

	@staticmethod
	def GetSvnItemLog_libsvn(item):
		# This isn't working and I'm not sure if libsvn supports getting logs from the server
		pool = svn.core.svn_pool_create()
		repos = svn.core.svn_repos_open(None, 'http://subversion.palm.com/main', pool)

		logs = svn.wc.svn_repos_get_logs(repos, ['/nova/palm/browser-adapter/trunk/Rectangle.h'], 0, 9999999, true, true, None,
				None, pool)

	@staticmethod
	def GetNodeText(node):
		if node.nodeType == xml.dom.minidom.Node.TEXT_NODE:
			return node.data
		text = ''
		for child in node.childNodes:
			if child.nodeType == xml.dom.minidom.Node.TEXT_NODE:
				text += child.data
		return text

	def GetElementText(node, elementName):
		return Subversion.GetNodeText(node.getElementsByTagName(elementName)[0])
		
	@staticmethod
	def GetSvnItemLog(item):
		cmd = ['svn', 'log', '--xml', '--non-interactive', item]
		log = []
		proc = subprocess.Popen(cmd, stdout = subprocess.PIPE)
		proc.wait()
		if proc.returncode == 0:
			doc = xml.dom.minidom.parse(proc.stdout)
			for node in doc.getElementsByTagName("logentry"):
				entry = SvnLogEntry(int(node.getAttribute('revision')))
				entry.author = GetElementText(node, 'author')
				entry.date = GetElementText(node, 'date')
				entry.msg = GetElementText(node, 'msg')
				log.append(entry)
		else:
			return None

		return log

	@staticmethod
	def GetItemHistory(self, item):
		return True

	@staticmethod
	def IgnoreItem(item):
		return item.endswith('.svn')

class MyFrame(wx.Frame):
	def __init__(self, parent, id, title):
		wx.Frame.__init__(self, parent, id, title, size=(570, 600))
		self.imageList = wx.ImageList(24, 24)
		self.imageList.AddIcon(wx.Icon('/home/chris/file.png', wx.BITMAP_TYPE_ANY, 24, 24))
		self.imageList.AddIcon(wx.Icon('/home/chris/folder.png', wx.BITMAP_TYPE_ANY, 24, 24))
		self.imageList.AddIcon(wx.Icon('/home/chris/file-svn.png', wx.BITMAP_TYPE_ANY, 24, 24))
		self.imageList.AddIcon(wx.Icon('/home/chris/folder-svn.png', wx.BITMAP_TYPE_ANY, 24, 24))
		#self.Centre()

	def OnDoubleClick(self, event):
		print "Got double click"
	
	def OnItemSelected(self, event):
		print "item selected."

	def ListDir(self, dir):
		abspath = os.path.abspath(dir)
		listid=wx.NewId()
		self.list = wx.ListCtrl(self, listid, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
		#self.Bind(wx.EVT_SPLITTER_DCLICK, self.OnDoubleClick, id=listid)
		#self.list.bind(wx.EVT_COMMAND_LISTBOX_DOUBLE_CLICKED, self.OnDoubleClick, id=listid)
		wx.EVT_LISTCTRL_DCLICK(self, self.list.GetId(), self.OnDoubleClick)
#		wx.EVT_LISTBOX_DCLICK(self, self.list.GetId(), self.OnDoubleClick)
		print "Added double=click handler"
		#self.list.Bind(wx.EVT_LISTBOX_DCLICK, self.OnDoubleClick, id=listid)
		self.list.Show()
		self.list.InsertColumn(0, "File", width=250)
		self.list.InsertColumn(1, "Author", width=140)
		self.list.InsertColumn(2, "Date", width=150)
		self.list.AssignImageList(self.imageList, wx.IMAGE_LIST_SMALL)
		self.Show()

		itemnames = dircache.listdir(abspath)
		idx = 0
		for item in itemnames:
			if not Subversion.IgnoreItem(item):
				fullpath = os.path.join(abspath,item)

				svninfo = Subversion.GetSvnItemEntry(fullpath)
				idxImg = 0
				if os.path.isdir(fullpath):
					idxImg = 1
				else:
					idxImg = 0
				if svninfo != None:
					idxImg += 2
					
				self.list.InsertImageStringItem(idx, item, idxImg)
				if svninfo:
					self.list.SetStringItem(idx, 1, svninfo.cmt_author, -1)
					#self.list.SetStringItem(idx, 2, str(svninfo.cmt_date), -1)
					ctime = datetime.datetime.fromtimestamp(svninfo.cmt_date / 1000000.0)
					self.list.SetStringItem(idx, 2, ctime.isoformat(), -1)

				idx += 1

	def ListHistory(self, item):
		id=wx.NewId()
		self.list = wx.ListCtrl(self, id, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
		self.list.Show()
		self.list.InsertColumn(0, "Revision", width=250)
		self.list.InsertColumn(1, "Author", width=140)
		self.list.InsertColumn(2, "Date", width=150)
		self.list.InsertColumn(3, "Comment", width=150)

app = wx.App()

item = '.'
frame = MyFrame(None, -1, 'Subversion History')

if os.path.isdir(item):
	frame.ListDir(item)
else:
	frame.ListHistory(item)

app.MainLoop()
