#!/usr/bin/env python

from __future__ import print_function

import errno
import os
import subprocess
import sys

if len(sys.argv) != 5:
  print("Incorrect arguments", file=sys.stderr)
  sys.exit(errno.EINVAL)

class Params:
  PROG = 0
  BASE = 1
  LOCAL = 2
  REMOTE = 3
  MERGED = 4

def GetPossibleMeldPaths():
  if sys.platform == 'darwin':
    return [
      '/usr/local/bin/meld',
      '/Applications/Meld.app/Contents/MacOS/Meld'
    ]
  if sys.platform == 'win32':
    return [
      os.path.join(os.environ['PROGRAMFILES(X86)'], 'Meld', 'meld', 'meld.exe'),
      os.path.join(os.environ['PROGRAMFILES(X86)'], 'Meld', 'meld.exe')
    ]
  return []

def GetMeldPath():
  for p in GetPossibleMeldPaths():
    if os.path.exists(p):
      return p
  # Assume Meld is in the PATH.
  return 'meld'

# Open up Meld with three tabs to more easily see what they (the *other* branch)
# did, what we (the local/current branch), and Git's merged version.

# I want the 3-way tab to be the initial visible one. Seems random how Meld
# decided which one to use.
cmd = [GetMeldPath(), sys.argv[Params.BASE], sys.argv[Params.LOCAL]]
cmd.extend(['--diff', sys.argv[Params.LOCAL], sys.argv[Params.MERGED], sys.argv[Params.REMOTE]])
cmd.extend(['--diff', sys.argv[Params.BASE], sys.argv[Params.REMOTE]])

subprocess.check_call(cmd)
